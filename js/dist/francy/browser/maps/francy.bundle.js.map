{"version":3,"names":[],"mappings":"","sources":["francy.bundle.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dataRequired = dataRequired;\nfunction dataRequired(props) {\n  return function decorator(target, name, descriptor) {\n    var oldValue = descriptor.value;\n\n    descriptor.value = function () {\n      if (!hasData(getProperty(this.data, props))) {\n        this.logger.debug('No data here [' + props + '], nothing to render... continuing...');\n        return;\n      }\n      return oldValue.apply(this, arguments);\n    };\n\n    return descriptor;\n  };\n}\n\nfunction getProperty(obj, propertyPath) {\n\n  var tmp = obj;\n\n  if (tmp && propertyPath) {\n    var properties = propertyPath.split('.');\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = properties[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var property = _step.value;\n\n        if (!tmp.hasOwnProperty(property)) {\n          tmp = undefined;\n          break;\n        } else {\n          tmp = tmp[property];\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  }\n\n  return tmp;\n}\n\nfunction hasData(obj) {\n  if (obj && (obj instanceof Array && obj.length || obj instanceof Object && Object.values(obj).length)) {\n    return true;\n  }\n  return false;\n}\n\n},{}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _frame = require('./render/frame');\n\nvar _frame2 = _interopRequireDefault(_frame);\n\nvar _renderer = require('./render/renderer');\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n//import Tracker from './tracker/change';\n\nvar ALL_CANVAS = {};\n\n/* global d3 */\n\n/**\n * Francy is the main entry point for the whole framework. By passing an input string/object to the {Francy.handle} function,\n * Francy will handle the creation of that json as long it is a valid and understandable json object to Francy.\n * @access public\n * \n * @version 0.5.0\n * \n * @example\n * let francy = new Francy({verbose: true, appendTo: '#div-id', callbackHandler: console.log});\n * francy.load(json).render();\n */\n\nvar Francy = function (_Renderer) {\n  _inherits(Francy, _Renderer);\n\n  /**\n   * Creates an instance of Francy with the following options:\n   * @typedef {Object} Options\n   * @property {Boolean} verbose prints extra log information to console.log, default false\n   * @property {Boolean} appendTo where the generated html/svg components will be attached to, default body\n   * @property {Function} callbackHandler this handler will be used to invoke actions from the menu, default console.log\n   */\n  function Francy(_ref) {\n    var _ref$verbose = _ref.verbose,\n        verbose = _ref$verbose === undefined ? false : _ref$verbose,\n        appendTo = _ref.appendTo,\n        callbackHandler = _ref.callbackHandler;\n\n    _classCallCheck(this, Francy);\n\n    var _this = _possibleConstructorReturn(this, (Francy.__proto__ || Object.getPrototypeOf(Francy)).call(this, { verbose: verbose, appendTo: appendTo, callbackHandler: callbackHandler }));\n\n    if (!d3) {\n      throw new Error('D3 is not imported! Francy won\\'t work without it... please import D3 v4+.');\n    }\n    return _this;\n  }\n\n  /**\n   * Main entry point. Calling render passing a json representation string will \n   * trigger the drawing of a json object.\n   * @returns {Object} the html element created\n   */\n\n\n  _createClass(Francy, [{\n    key: 'render',\n    value: function render() {\n      //var tracker = new Tracker(json, this.options);\n      //tracker.subscribe(function(obj) { console.log(obj); });\n      //return new Draw(this.options).handle(tracker.object);\n      var frame = new _frame2.default(this.options).load(this.data).render();\n      ALL_CANVAS[this.data.canvas.id] = frame.canvas;\n      return frame.element.node();\n    }\n  }, {\n    key: 'unrender',\n    value: function unrender(id) {\n      delete ALL_CANVAS[id];\n    }\n  }]);\n\n  return Francy;\n}(_renderer2.default);\n\nexports.default = Francy;\n\n\ntry {\n  exports.Francy = window.Francy = Francy;\n  // handle events on resize\n  var oldResize = window.onresize;\n  window.onresize = function () {\n    // zoom to fit all canvas on resize\n    Object.values(ALL_CANVAS).forEach(function (canvas) {\n      canvas.zoomToFit();\n    });\n    // call old resize function if any!\n    if (typeof oldResize === 'function') {\n      oldResize();\n    }\n  };\n} catch (e) {\n  exports.Francy = Francy;\n}\n\n},{\"./render/frame\":11,\"./render/renderer\":21}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _logger = require('../util/logger');\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nvar _jsonUtils = require('../util/json-utils');\n\nvar _jsonUtils2 = _interopRequireDefault(_jsonUtils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Base = function () {\n  function Base(_ref) {\n    var _ref$verbose = _ref.verbose,\n        verbose = _ref$verbose === undefined ? false : _ref$verbose,\n        appendTo = _ref.appendTo,\n        callbackHandler = _ref.callbackHandler;\n\n    _classCallCheck(this, Base);\n\n    this.settings({ verbose: verbose, appendTo: appendTo, callbackHandler: callbackHandler });\n    /**\n     * @type {Logger} the logger for this class\n     */\n    this.log = new _logger2.default(this.options);\n  }\n\n  _createClass(Base, [{\n    key: 'settings',\n    value: function settings(_ref2) {\n      var verbose = _ref2.verbose,\n          appendTo = _ref2.appendTo,\n          callbackHandler = _ref2.callbackHandler;\n\n      if (!callbackHandler) {\n        throw new Error('A Callback Handler must be provided! This will be used to trigger events from the graphics produced...');\n      }\n      if (!appendTo) {\n        throw new Error('Missing an element or id to append the graphics to...!');\n      }\n      /**\n       * @typedef {Object} Options\n       * @property {Boolean} verbose prints extra log information to console.log, default false\n       * @property {Boolean} appendTo where the generated html/svg components will be attached to, default body\n       * @property {Function} callbackHandler this handler will be used to invoke actions from the menu, default console.log\n       */\n      this.options = {};\n      this.options.verbose = verbose || this.options.verbose;\n      this.options.appendTo = appendTo || this.options.verbose;\n      this.options.callbackHandler = callbackHandler || this.options.callbackHandler;\n      return this;\n    }\n  }, {\n    key: 'load',\n    value: function load(json, partial) {\n      var data = _jsonUtils2.default.parse(json, partial);\n      if (data) {\n        this.data = data;\n      }\n      return this;\n    }\n  }, {\n    key: 'logger',\n    get: function get() {\n      return this.log;\n    }\n  }]);\n\n  return Base;\n}();\n\nexports.default = Base;\n\n},{\"../util/json-utils\":24,\"../util/logger\":25}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _dec, _desc, _value, _class;\n\nvar _base = require('./base');\n\nvar _base2 = _interopRequireDefault(_base);\n\nvar _modalRequired = require('./modal-required');\n\nvar _modalRequired2 = _interopRequireDefault(_modalRequired);\n\nvar _data = require('../decorator/data');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\nvar CallbackHandler = (_dec = (0, _data.dataRequired)(), (_class = function (_Base) {\n  _inherits(CallbackHandler, _Base);\n\n  function CallbackHandler(_ref) {\n    var _ref$verbose = _ref.verbose,\n        verbose = _ref$verbose === undefined ? false : _ref$verbose,\n        appendTo = _ref.appendTo,\n        callbackHandler = _ref.callbackHandler;\n\n    _classCallCheck(this, CallbackHandler);\n\n    var _this = _possibleConstructorReturn(this, (CallbackHandler.__proto__ || Object.getPrototypeOf(CallbackHandler)).call(this, { verbose: verbose, appendTo: appendTo, callbackHandler: callbackHandler }));\n\n    _this.callback = callbackHandler;\n    return _this;\n  }\n\n  _createClass(CallbackHandler, [{\n    key: 'execute',\n    value: function execute() {\n      var _this2 = this;\n\n      if (Object.keys(this.data.callback.requiredArgs).length) {\n        var options = this.options;\n        options.callbackHandler = function (calbackObj) {\n          return _this2._execute.call(_this2, calbackObj);\n        };\n        return new _modalRequired2.default(options).load(this.data, true).render();\n      } else {\n        // Trigger is the expected command on GAP for this events!\n        this._execute(this.data.callback);\n      }\n    }\n  }, {\n    key: '_execute',\n    value: function _execute(calbackObj) {\n      this.callback('Trigger(' + JSON.stringify(JSON.stringify(calbackObj)) + ');');\n    }\n  }]);\n\n  return CallbackHandler;\n}(_base2.default), (_applyDecoratedDescriptor(_class.prototype, 'execute', [_dec], Object.getOwnPropertyDescriptor(_class.prototype, 'execute'), _class.prototype)), _class));\nexports.default = CallbackHandler;\n\n},{\"../decorator/data\":1,\"./base\":3,\"./modal-required\":20}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _dec, _desc, _value, _class;\n\nvar _composite = require('./composite');\n\nvar _composite2 = _interopRequireDefault(_composite);\n\nvar _graph = require('./graph');\n\nvar _graph2 = _interopRequireDefault(_graph);\n\nvar _chart = require('./chart');\n\nvar _chart2 = _interopRequireDefault(_chart);\n\nvar _data = require('../decorator/data');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\n/* global d3 */\n\nvar Canvas = (_dec = (0, _data.dataRequired)(), (_class = function (_Composite) {\n  _inherits(Canvas, _Composite);\n\n  function Canvas(_ref) {\n    var _ref$verbose = _ref.verbose,\n        verbose = _ref$verbose === undefined ? false : _ref$verbose,\n        appendTo = _ref.appendTo,\n        callbackHandler = _ref.callbackHandler;\n\n    _classCallCheck(this, Canvas);\n\n    var _this = _possibleConstructorReturn(this, (Canvas.__proto__ || Object.getPrototypeOf(Canvas)).call(this, { verbose: verbose, appendTo: appendTo, callbackHandler: callbackHandler }));\n\n    _this.graph = new _graph2.default(_this.options);\n    _this.chart = new _chart2.default(_this.options);\n    _this.add(_this.graph).add(_this.chart);\n    return _this;\n  }\n\n  _createClass(Canvas, [{\n    key: 'render',\n    value: function render() {\n      var parent = this.options.appendTo.element;\n\n      var canvasId = this.data.canvas.id;\n      this.element = d3.select('svg#' + canvasId);\n      // check if the canvas is already present\n      if (!this.element.node()) {\n        // create a svg element detached from the DOM!\n        this.logger.debug('Creating Canvas [' + canvasId + ']...');\n        this.element = parent.append('svg').attr('class', 'francy-canvas').attr('id', canvasId);\n      }\n\n      // cannot continue if canvas is not present\n      if (!this.element.node()) {\n        throw new Error('Oops, could not create canvas with id [' + canvasId + ']... Cannot proceed.');\n      }\n\n      this.element.attr('width', this.data.canvas.width).attr('height', this.data.canvas.height);\n\n      var zoom = d3.zoom();\n\n      var content = this.element.select('g.francy-content');\n\n      if (!content.node()) {\n        content = this.element.append('g').attr('class', 'francy-content');\n        zoom.on(\"zoom\", zoomed);\n        this.element.call(zoom).on(\"dblclick.zoom\", null);\n      }\n\n      this.element.on(\"click\", stopped, true);\n\n      var self = this;\n      this.element.zoomToFit = this.zoomToFit = function () {\n        // only execute if enable, of course\n        if (self.data.canvas.zoomToFit) {\n          var bounds = content.node().getBBox();\n\n          var clientBounds = self.element.node().getBoundingClientRect(),\n              fullWidth = clientBounds.right - clientBounds.left,\n              fullHeight = clientBounds.bottom - clientBounds.top;\n\n          var width = bounds.width,\n              height = bounds.height;\n\n          if (width == 0 || height == 0) return;\n\n          var midX = bounds.x + width / 2,\n              midY = bounds.y + height / 2;\n\n          var scale = 0.9 / Math.max(width / fullWidth, height / fullHeight);\n          var translateX = fullWidth / 2 - scale * midX,\n              translateY = fullHeight / 2 - scale * midY;\n\n          content.transition().duration(1000).attr('transform', 'translate(' + translateX + ',' + translateY + ')scale(' + scale + ',' + scale + ')').on('end', function () {\n            return updateZoom(translateX, translateY, scale);\n          });\n        }\n      };\n\n      function updateZoom(translateX, translateY, scale) {\n        self.element.call(zoom.transform, d3.zoomIdentity.translate(translateX, translateY).scale(scale, scale));\n      }\n\n      function zoomed() {\n        content.attr(\"transform\", d3.event.transform);\n      }\n\n      function stopped() {\n        if (d3.event.defaultPrevented) {\n          d3.event.stopPropagation();\n        }\n      }\n\n      this.logger.debug('Canvas updated [' + canvasId + ']...');\n\n      this.renderChildren();\n\n      return this;\n    }\n  }, {\n    key: 'unrender',\n    value: function unrender() {}\n  }]);\n\n  return Canvas;\n}(_composite2.default), (_applyDecoratedDescriptor(_class.prototype, 'render', [_dec], Object.getOwnPropertyDescriptor(_class.prototype, 'render'), _class.prototype)), _class));\nexports.default = Canvas;\n\n},{\"../decorator/data\":1,\"./chart\":9,\"./composite\":10,\"./graph\":14}],6:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _renderer = require('./renderer');\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _tooltip = require('./tooltip');\n\nvar _tooltip2 = _interopRequireDefault(_tooltip);\n\nvar _chart = require('./chart');\n\nvar _chart2 = _interopRequireDefault(_chart);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/* global d3 */\n\nvar BarChart = function (_Renderer) {\n  _inherits(BarChart, _Renderer);\n\n  function BarChart(_ref) {\n    var _ref$verbose = _ref.verbose,\n        verbose = _ref$verbose === undefined ? false : _ref$verbose,\n        appendTo = _ref.appendTo,\n        callbackHandler = _ref.callbackHandler;\n\n    _classCallCheck(this, BarChart);\n\n    return _possibleConstructorReturn(this, (BarChart.__proto__ || Object.getPrototypeOf(BarChart)).call(this, { verbose: verbose, appendTo: appendTo, callbackHandler: callbackHandler }));\n  }\n\n  _createClass(BarChart, [{\n    key: 'render',\n    value: function render() {\n\n      var tooltip = new _tooltip2.default(this.options);\n\n      var parent = this.options.appendTo.element;\n\n      var axis = this.data.canvas.chart.axis,\n          datasets = this.data.canvas.chart.data,\n          datasetNames = Object.keys(datasets);\n\n      this.element = parent.select('g.francy-content');\n\n      var margin = { top: 50, right: 50, bottom: 50, left: 50 },\n          width = +parent.attr('width') || d3.select('body').node().getBoundingClientRect().width,\n          height = +parent.attr('height') || d3.select('body').node().getBoundingClientRect().height;\n\n      // set the dimensions and margins of the chart\n      width = width - margin.left - margin.right;\n      height = height - margin.top - margin.bottom;\n\n      // set the ranges\n      var x = d3.scaleBand().range([0, width]).padding(0.1).domain(axis.x.domain);\n      var y = d3.scaleLinear().range([height, 0]).domain(axis.y.domain);\n\n      var tmp = [];\n      datasetNames.forEach(function (key) {\n        return tmp = tmp.concat(datasets[key]);\n      });\n\n      if (!axis.y.domain.length) {\n        y.domain([0, d3.max(tmp, function (d) {\n          return d;\n        })]);\n      }\n\n      if (!axis.x.domain.length) {\n        axis.x.domain = _chart2.default.domainRange(tmp.length / datasetNames.length);\n        x.domain(axis.x.domain);\n      }\n\n      var barsGroup = this.element.selectAll('g.francy-bars');\n\n      if (!barsGroup.node()) {\n        barsGroup = this.element.append('g').attr('class', 'francy-bars');\n      }\n\n      datasetNames.forEach(function (key, index) {\n        var bar = barsGroup.selectAll('.francy-bar' + index).data(datasets[key]);\n\n        bar.exit().remove();\n\n        // append the rectangles for the bar chart\n        bar.enter().append('rect').style('fill', function () {\n          return _chart2.default.colors(index * 5);\n        }).attr('class', 'francy-bar' + index).attr('x', function (d, i) {\n          return x(axis.x.domain[i]) + index * (x.bandwidth() / datasetNames.length);\n        }).attr('width', x.bandwidth() / datasetNames.length - 1).attr('y', function (d) {\n          return y(d);\n        }).attr('height', function (d) {\n          return height - y(d);\n        }).on(\"mouseenter\", function (d) {\n          d3.select(this).transition().duration(250).style(\"fill-opacity\", 0.5);\n          tooltip.load(_chart2.default.tooltip(key, d), true).render();\n        }).on(\"mouseleave\", function () {\n          d3.select(this).transition().duration(250).style(\"fill-opacity\", 1);\n          tooltip.unrender();\n        });\n\n        bar.merge(bar);\n      });\n\n      // force rebuild axis again\n      var xAxisGroup = this.element.selectAll('g.francy-x-axis');\n\n      if (!xAxisGroup.node()) {\n        xAxisGroup = this.element.append('g').attr('class', 'francy-x-axis');\n      }\n\n      xAxisGroup.selectAll('*').remove();\n\n      // add the x Axis\n      xAxisGroup.attr('transform', 'translate(0,' + height + ')').call(d3.axisBottom(x)).append('text').attr('dy', 50).attr('dx', width / 2).attr('fill', 'black').attr('class', 'francy-axis').style('text-anchor', 'end').text(axis.x.title);\n\n      // force rebuild axis again\n      var yAxisGroup = this.element.selectAll('g.francy-y-axis');\n\n      if (!yAxisGroup.node()) {\n        yAxisGroup = this.element.append('g').attr('class', 'francy-y-axis');\n      }\n\n      yAxisGroup.selectAll('*').remove();\n\n      // add the y Axis\n      yAxisGroup.call(d3.axisLeft(y)).append('text').attr('dx', -50).attr('dy', height / 2).attr('fill', 'black').attr('class', 'francy-axis').style('text-anchor', 'end').text(axis.y.title);\n\n      var legendGroup = this.element.selectAll('.francy-legend');\n\n      if (!legendGroup.node()) {\n        legendGroup = this.element.append('g').attr('class', 'francy-legend');\n      }\n\n      // force rebuild legend again\n      legendGroup.selectAll('*').remove();\n\n      var legend = legendGroup.selectAll('g').data(datasetNames.slice());\n\n      legend.exit().remove();\n\n      legend = legend.enter().append('g').attr('transform', function (d, i) {\n        return 'translate(0,' + i * 20 + ')';\n      }).merge(legend);\n\n      legend.append('rect').attr('x', width + 20).attr('width', 19).attr('height', 19).style('fill', function (d, i) {\n        return _chart2.default.colors(i * 5);\n      });\n\n      legend.append('text').attr('x', width + 80).attr('y', 9).attr('dy', '.35em').style('text-anchor', 'end').text(function (d) {\n        return d;\n      });\n\n      return this;\n    }\n  }, {\n    key: 'unrender',\n    value: function unrender() {}\n  }]);\n\n  return BarChart;\n}(_renderer2.default);\n\nexports.default = BarChart;\n\n},{\"./chart\":9,\"./renderer\":21,\"./tooltip\":22}],7:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _renderer = require('./renderer');\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _tooltip = require('./tooltip');\n\nvar _tooltip2 = _interopRequireDefault(_tooltip);\n\nvar _chart = require('./chart');\n\nvar _chart2 = _interopRequireDefault(_chart);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/* global d3 */\n\nvar LineChart = function (_Renderer) {\n  _inherits(LineChart, _Renderer);\n\n  function LineChart(_ref) {\n    var _ref$verbose = _ref.verbose,\n        verbose = _ref$verbose === undefined ? false : _ref$verbose,\n        appendTo = _ref.appendTo,\n        callbackHandler = _ref.callbackHandler;\n\n    _classCallCheck(this, LineChart);\n\n    return _possibleConstructorReturn(this, (LineChart.__proto__ || Object.getPrototypeOf(LineChart)).call(this, { verbose: verbose, appendTo: appendTo, callbackHandler: callbackHandler }));\n  }\n\n  _createClass(LineChart, [{\n    key: 'render',\n    value: function render() {\n\n      var tooltip = new _tooltip2.default(this.options);\n\n      var parent = this.options.appendTo.element;\n\n      var axis = this.data.canvas.chart.axis,\n          datasets = this.data.canvas.chart.data,\n          datasetNames = Object.keys(datasets);\n\n      this.element = parent.select('g.francy-content');\n\n      var margin = { top: 50, right: 50, bottom: 50, left: 50 },\n          width = +parent.attr('width') || d3.select('body').node().getBoundingClientRect().width,\n          height = +parent.attr('height') || d3.select('body').node().getBoundingClientRect().height;\n\n      // set the dimensions and margins of the chart\n      width = width - margin.left - margin.right;\n      height = height - margin.top - margin.bottom;\n\n      // set the ranges\n      var x = d3.scaleLinear().range([0, width]).domain(axis.x.domain);\n      var y = d3.scaleLinear().range([height, 0]).domain(axis.y.domain);\n\n      var tmp = [];\n      datasetNames.forEach(function (key) {\n        return tmp = tmp.concat(datasets[key]);\n      });\n\n      if (!axis.y.domain.length) {\n        y.domain([0, d3.max(tmp, function (d) {\n          return d;\n        })]);\n      }\n\n      if (!axis.x.domain.length) {\n        x.domain([0, tmp.length / datasetNames.length]);\n      }\n\n      var linesGroup = this.element.selectAll('g.francy-lines');\n\n      if (!linesGroup.node()) {\n        linesGroup = this.element.append('g').attr('class', 'francy-lines');\n      }\n\n      datasetNames.forEach(function (key, index) {\n        var valueLine = d3.line().x(function (d, i) {\n          return x(i);\n        }).y(function (d) {\n          return y(d);\n        });\n\n        var line = linesGroup.selectAll('.line' + index).data([datasets[key]]);\n\n        line.exit().remove();\n\n        // append the rectangles for the bar chart\n        line.enter().append('path').style('stroke', function () {\n          return _chart2.default.colors(index * 5);\n        }).style('stroke-width', '5px').attr('class', 'francy-line' + index).attr('d', valueLine).on(\"mouseenter\", function (d) {\n          d3.select(this).transition().duration(250).style(\"stroke-opacity\", 0.5).style('stroke-width', '10px');\n          tooltip.load(_chart2.default.tooltip(key, d), true).render();\n        }).on(\"mouseleave\", function () {\n          d3.select(this).transition().duration(250).style(\"stroke-opacity\", 1).style('stroke-width', '5px');\n          tooltip.unrender();\n        });\n\n        line.merge(line);\n      });\n\n      // force rebuild axis again\n      var xAxisGroup = this.element.selectAll('g.francy-x-axis');\n\n      if (!xAxisGroup.node()) {\n        xAxisGroup = this.element.append('g').attr('class', 'francy-x-axis');\n      }\n\n      xAxisGroup.selectAll('*').remove();\n\n      // add the x Axis\n      xAxisGroup.attr('transform', 'translate(0,' + height + ')').call(d3.axisBottom(x)).append('text').attr('dy', 50).attr('dx', width / 2).attr('fill', 'black').attr('class', 'francy-axis').style('text-anchor', 'end').text(axis.x.title);\n\n      // force rebuild axis again\n      var yAxisGroup = this.element.selectAll('g.francy-y-axis');\n\n      if (!yAxisGroup.node()) {\n        yAxisGroup = this.element.append('g').attr('class', 'francy-y-axis');\n      }\n\n      yAxisGroup.selectAll('*').remove();\n\n      // add the y Axis\n      yAxisGroup.call(d3.axisLeft(y)).append('text').attr('dx', -50).attr('dy', height / 2).attr('fill', 'black').attr('class', 'francy-axis').style('text-anchor', 'end').text(axis.y.title);\n\n      var legendGroup = this.element.selectAll('.francy-legend');\n\n      if (!legendGroup.node()) {\n        legendGroup = this.element.append('g').attr('class', 'francy-legend');\n      }\n\n      // force rebuild legend again\n      legendGroup.selectAll('*').remove();\n\n      var legend = legendGroup.selectAll('g').data(datasetNames.slice());\n\n      legend.exit().remove();\n\n      legend = legend.enter().append('g').attr('transform', function (d, i) {\n        return 'translate(0,' + i * 20 + ')';\n      }).merge(legend);\n\n      legend.append('rect').attr('x', width + 20).attr('width', 19).attr('height', 19).style('fill', function (d, i) {\n        return _chart2.default.colors(i * 5);\n      });\n\n      legend.append('text').attr('x', width + 80).attr('y', 9).attr('dy', '.35em').style('text-anchor', 'end').text(function (d) {\n        return d;\n      });\n\n      return this;\n    }\n  }, {\n    key: 'unrender',\n    value: function unrender() {}\n  }]);\n\n  return LineChart;\n}(_renderer2.default);\n\nexports.default = LineChart;\n\n},{\"./chart\":9,\"./renderer\":21,\"./tooltip\":22}],8:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _renderer = require('./renderer');\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _tooltip = require('./tooltip');\n\nvar _tooltip2 = _interopRequireDefault(_tooltip);\n\nvar _chart = require('./chart');\n\nvar _chart2 = _interopRequireDefault(_chart);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/* global d3 */\n\nvar ScatterChart = function (_Renderer) {\n  _inherits(ScatterChart, _Renderer);\n\n  function ScatterChart(_ref) {\n    var _ref$verbose = _ref.verbose,\n        verbose = _ref$verbose === undefined ? false : _ref$verbose,\n        appendTo = _ref.appendTo,\n        callbackHandler = _ref.callbackHandler;\n\n    _classCallCheck(this, ScatterChart);\n\n    return _possibleConstructorReturn(this, (ScatterChart.__proto__ || Object.getPrototypeOf(ScatterChart)).call(this, { verbose: verbose, appendTo: appendTo, callbackHandler: callbackHandler }));\n  }\n\n  _createClass(ScatterChart, [{\n    key: 'render',\n    value: function render() {\n\n      var tooltip = new _tooltip2.default(this.options);\n\n      var parent = this.options.appendTo.element;\n\n      var axis = this.data.canvas.chart.axis,\n          datasets = this.data.canvas.chart.data,\n          datasetNames = Object.keys(datasets);\n\n      this.element = parent.select('g.francy-content');\n\n      var margin = { top: 50, right: 50, bottom: 50, left: 50 },\n          width = +parent.attr('width') || d3.select('body').node().getBoundingClientRect().width,\n          height = +parent.attr('height') || d3.select('body').node().getBoundingClientRect().height;\n\n      // set the dimensions and margins of the chart\n      width = width - margin.left - margin.right;\n      height = height - margin.top - margin.bottom;\n\n      // set the ranges\n      var x = d3.scaleLinear().range([0, width]).domain(axis.x.domain);\n      var y = d3.scaleLinear().range([height, 0]).domain(axis.y.domain);\n\n      var tmp = [];\n      datasetNames.forEach(function (key) {\n        return tmp = tmp.concat(datasets[key]);\n      });\n\n      if (!axis.y.domain.length) {\n        y.domain([0, d3.max(tmp, function (d) {\n          return d;\n        })]);\n      }\n\n      if (!axis.x.domain.length) {\n        x.domain([0, tmp.length / datasetNames.length]);\n      }\n\n      var scatterGroup = this.element.selectAll('g.francy-scatters');\n\n      if (!scatterGroup.node()) {\n        scatterGroup = this.element.append('g').attr('class', 'francy-scatters');\n      }\n\n      datasetNames.forEach(function (key, index) {\n        var scatter = scatterGroup.selectAll('.scatter' + index).data(datasets[key]);\n\n        scatter.exit().remove();\n\n        // append the rectangles for the bar chart\n        scatter.enter().append('circle').style('fill', function () {\n          return _chart2.default.colors(index * 5);\n        }).attr('class', 'francy-scatter' + index).attr(\"r\", 5).attr(\"cx\", function (d, i) {\n          return x(i);\n        }).attr(\"cy\", function (d) {\n          return y(d);\n        }).on(\"mouseenter\", function (d) {\n          d3.select(this).transition().duration(250).style(\"fill-opacity\", 0.5).attr('r', 10);\n          tooltip.load(_chart2.default.tooltip(key, d), true).render();\n        }).on(\"mouseleave\", function () {\n          d3.select(this).transition().duration(250).style(\"fill-opacity\", 1).attr('r', 5);\n          tooltip.unrender();\n        });\n\n        scatter.merge(scatter);\n      });\n\n      // force rebuild axis again\n      var xAxisGroup = this.element.selectAll('g.francy-x-axis');\n\n      if (!xAxisGroup.node()) {\n        xAxisGroup = this.element.append('g').attr('class', 'francy-x-axis');\n      }\n\n      xAxisGroup.selectAll('*').remove();\n\n      // add the x Axis\n      xAxisGroup.attr('transform', 'translate(0,' + height + ')').call(d3.axisBottom(x)).append('text').attr('dy', 50).attr('dx', width / 2).attr('fill', 'black').attr('class', 'francy-axis').style('text-anchor', 'end').text(axis.x.title);\n\n      // force rebuild axis again\n      var yAxisGroup = this.element.selectAll('g.francy-y-axis');\n\n      if (!yAxisGroup.node()) {\n        yAxisGroup = this.element.append('g').attr('class', 'francy-y-axis');\n      }\n\n      yAxisGroup.selectAll('*').remove();\n\n      // add the y Axis\n      yAxisGroup.call(d3.axisLeft(y)).append('text').attr('dx', -50).attr('dy', height / 2).attr('fill', 'black').attr('class', 'francy-axis').style('text-anchor', 'end').text(axis.y.title);\n\n      var legendGroup = this.element.selectAll('.francy-legend');\n\n      if (!legendGroup.node()) {\n        legendGroup = this.element.append('g').attr('class', 'francy-legend');\n      }\n\n      // force rebuild legend again\n      legendGroup.selectAll('*').remove();\n\n      var legend = legendGroup.selectAll('g').data(datasetNames.slice());\n\n      legend.exit().remove();\n\n      legend = legend.enter().append('g').attr('transform', function (d, i) {\n        return 'translate(0,' + i * 20 + ')';\n      }).merge(legend);\n\n      legend.append('rect').attr('x', width + 20).attr('width', 19).attr('height', 19).style('fill', function (d, i) {\n        return _chart2.default.colors(i * 5);\n      });\n\n      legend.append('text').attr('x', width + 80).attr('y', 9).attr('dy', '.35em').style('text-anchor', 'end').text(function (d) {\n        return d;\n      });\n\n      return this;\n    }\n  }, {\n    key: 'unrender',\n    value: function unrender() {}\n  }]);\n\n  return ScatterChart;\n}(_renderer2.default);\n\nexports.default = ScatterChart;\n\n},{\"./chart\":9,\"./renderer\":21,\"./tooltip\":22}],9:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _dec, _desc, _value, _class;\n\nvar _renderer = require('./renderer');\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _chartBar = require('./chart-bar');\n\nvar _chartBar2 = _interopRequireDefault(_chartBar);\n\nvar _chartLine = require('./chart-line');\n\nvar _chartLine2 = _interopRequireDefault(_chartLine);\n\nvar _chartScatter = require('./chart-scatter');\n\nvar _chartScatter2 = _interopRequireDefault(_chartScatter);\n\nvar _data = require('../decorator/data');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\n/* global d3 */\n\nvar Chart = (_dec = (0, _data.dataRequired)('canvas.chart'), (_class = function (_Renderer) {\n  _inherits(Chart, _Renderer);\n\n  function Chart(_ref) {\n    var _ref$verbose = _ref.verbose,\n        verbose = _ref$verbose === undefined ? false : _ref$verbose,\n        appendTo = _ref.appendTo,\n        callbackHandler = _ref.callbackHandler;\n\n    _classCallCheck(this, Chart);\n\n    return _possibleConstructorReturn(this, (Chart.__proto__ || Object.getPrototypeOf(Chart)).call(this, { verbose: verbose, appendTo: appendTo, callbackHandler: callbackHandler }));\n  }\n\n  _createClass(Chart, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var element = undefined;\n      switch (this.data.canvas.chart.type) {\n        case \"bar\":\n          element = new _chartBar2.default(this.options).load(this.data).render();\n          break;\n        case \"line\":\n          element = new _chartLine2.default(this.options).load(this.data).render();\n          break;\n        case \"scatter\":\n          element = new _chartScatter2.default(this.options).load(this.data).render();\n          break;\n      }\n\n      setTimeout(function () {\n        _this2.options.appendTo.element.zoomToFit();\n      }, 10);\n\n      return element;\n    }\n  }, {\n    key: 'unrender',\n    value: function unrender() {}\n  }], [{\n    key: 'tooltip',\n    value: function tooltip(dataset, value) {\n      return { \"A\": { 'title': 'Dataset', 'text': dataset }, \"B\": { 'title': 'Value', 'text': value } };\n    }\n  }, {\n    key: 'domainRange',\n    value: function domainRange(max) {\n      return Array.from(new Array(max), function (_, i) {\n        return i;\n      }).map(function (x) {\n        return x;\n      });\n    }\n  }, {\n    key: 'colors',\n    get: function get() {\n      return d3.scaleSequential().domain([0, 100]).interpolator(d3.interpolateRainbow);\n    }\n  }]);\n\n  return Chart;\n}(_renderer2.default), (_applyDecoratedDescriptor(_class.prototype, 'render', [_dec], Object.getOwnPropertyDescriptor(_class.prototype, 'render'), _class.prototype)), _class));\nexports.default = Chart;\n\n},{\"../decorator/data\":1,\"./chart-bar\":6,\"./chart-line\":7,\"./chart-scatter\":8,\"./renderer\":21}],10:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _renderer = require('./renderer');\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Composite = function (_Renderer) {\n  _inherits(Composite, _Renderer);\n\n  function Composite(_ref) {\n    var _ref$verbose = _ref.verbose,\n        verbose = _ref$verbose === undefined ? false : _ref$verbose,\n        appendTo = _ref.appendTo,\n        callbackHandler = _ref.callbackHandler;\n\n    _classCallCheck(this, Composite);\n\n    var _this = _possibleConstructorReturn(this, (Composite.__proto__ || Object.getPrototypeOf(Composite)).call(this, { verbose: verbose, appendTo: appendTo, callbackHandler: callbackHandler }));\n\n    if (new.target === Composite) {\n      throw new TypeError('Cannot construct [Composite] instances directly!');\n    }\n    _this.renderers = [];\n    return _this;\n  }\n\n  _createClass(Composite, [{\n    key: 'add',\n    value: function add(renderer) {\n      this.renderers.push(renderer);\n      return this;\n    }\n  }, {\n    key: 'renderChildren',\n    value: function renderChildren() {\n      // update children rendering with a new parent!\n      var options = this.options;\n      options.appendTo = this;\n      // render other components\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.renderers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var renderer = _step.value;\n\n          renderer.settings(options).load(this.data).render();\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }]);\n\n  return Composite;\n}(_renderer2.default);\n\nexports.default = Composite;\n\n},{\"./renderer\":21}],11:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _dec, _desc, _value, _class;\n\nvar _composite = require('./composite');\n\nvar _composite2 = _interopRequireDefault(_composite);\n\nvar _canvas = require('./canvas');\n\nvar _canvas2 = _interopRequireDefault(_canvas);\n\nvar _menuMain = require('./menu-main');\n\nvar _menuMain2 = _interopRequireDefault(_menuMain);\n\nvar _message = require('./message');\n\nvar _message2 = _interopRequireDefault(_message);\n\nvar _data = require('../decorator/data');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\n/* global d3 */\n\nvar Frame = (_dec = (0, _data.dataRequired)(), (_class = function (_Composite) {\n  _inherits(Frame, _Composite);\n\n  function Frame(_ref) {\n    var _ref$verbose = _ref.verbose,\n        verbose = _ref$verbose === undefined ? false : _ref$verbose,\n        appendTo = _ref.appendTo,\n        callbackHandler = _ref.callbackHandler;\n\n    _classCallCheck(this, Frame);\n\n    var _this = _possibleConstructorReturn(this, (Frame.__proto__ || Object.getPrototypeOf(Frame)).call(this, { verbose: verbose, appendTo: appendTo, callbackHandler: callbackHandler }));\n\n    _this.canvas = new _canvas2.default(_this.options);\n    _this.menu = new _menuMain2.default(_this.options);\n    _this.messages = new _message2.default(_this.options);\n    _this.add(_this.messages).add(_this.menu).add(_this.canvas);\n    _this.element = undefined;\n    return _this;\n  }\n\n  _createClass(Frame, [{\n    key: 'render',\n    value: function render() {\n      var parent = d3.select(this.options.appendTo);\n\n      var frameId = 'F' + this.data.canvas.id;\n      this.element = d3.select('div#' + frameId);\n      // check if the canvas is already present\n      if (!this.element.node()) {\n        // create a svg element detached from the DOM!\n        this.logger.debug('Creating Frame [' + frameId + ']...');\n        this.element = parent.append('div').attr('class', 'francy').attr('id', frameId);\n      }\n\n      // cannot continue if canvas is not present\n      if (!this.element.node()) {\n        throw new Error('Oops, could not create frame with id [' + frameId + ']... Cannot proceed.');\n      }\n\n      this.logger.debug('Frame updated [' + frameId + ']...');\n\n      this.renderChildren();\n\n      return this;\n    }\n  }, {\n    key: 'unrender',\n    value: function unrender() {}\n  }]);\n\n  return Frame;\n}(_composite2.default), (_applyDecoratedDescriptor(_class.prototype, 'render', [_dec], Object.getOwnPropertyDescriptor(_class.prototype, 'render'), _class.prototype)), _class));\nexports.default = Frame;\n\n},{\"../decorator/data\":1,\"./canvas\":5,\"./composite\":10,\"./menu-main\":16,\"./message\":18}],12:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _renderer = require('./renderer');\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _graph = require('./graph');\n\nvar _graph2 = _interopRequireDefault(_graph);\n\nvar _component = require('../util/component');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/* global d3 */\n\nvar GenericGraph = function (_Renderer) {\n  _inherits(GenericGraph, _Renderer);\n\n  function GenericGraph(_ref) {\n    var _ref$verbose = _ref.verbose,\n        verbose = _ref$verbose === undefined ? false : _ref$verbose,\n        appendTo = _ref.appendTo,\n        callbackHandler = _ref.callbackHandler;\n\n    _classCallCheck(this, GenericGraph);\n\n    return _possibleConstructorReturn(this, (GenericGraph.__proto__ || Object.getPrototypeOf(GenericGraph)).call(this, { verbose: verbose, appendTo: appendTo, callbackHandler: callbackHandler }));\n  }\n\n  _createClass(GenericGraph, [{\n    key: 'render',\n    value: function render() {\n\n      var parent = this.options.appendTo.element;\n\n      var simulationActive = this.data.canvas.graph.simulation;\n\n      var canvasNodes = this.data.canvas.graph.nodes ? Object.values(this.data.canvas.graph.nodes) : [],\n          canvasLinks = this.data.canvas.graph.links ? Object.values(this.data.canvas.graph.links) : [];\n\n      this.element = parent.select('g.francy-content');\n\n      var width = +parent.attr('width') || d3.select('body').node().getBoundingClientRect().width,\n          height = +parent.attr('height') || d3.select('body').node().getBoundingClientRect().height;\n\n      var linkGroup = this.element.selectAll('g.francy-links');\n\n      if (!linkGroup.node()) {\n        linkGroup = this.element.append('g').attr('class', 'francy-links');\n      }\n\n      var link = linkGroup.selectAll('line.francy-link').data(canvasLinks);\n\n      var nodeGroup = this.element.selectAll('g.francy-nodes');\n\n      if (!nodeGroup.node()) {\n        nodeGroup = this.element.append('g').attr('class', 'francy-nodes');\n      }\n\n      var node = nodeGroup.selectAll('g.francy-node').data(canvasNodes);\n\n      if (node.exit().data().length == 0 && node.enter().data().length == 0 && link.enter().data().length == 0 && link.enter().data().length == 0) {\n        return;\n      }\n\n      link.exit().remove();\n\n      link = link.enter().append('line').attr('class', 'francy-link').attr('id', function (d) {\n        return d.source + ',' + d.target;\n      }).attr('x1', function (d) {\n        return d.source.x;\n      }).attr('y1', function (d) {\n        return d.source.y;\n      }).attr('x2', function (d) {\n        return d.target.x;\n      }).attr('y2', function (d) {\n        return d.target.y;\n      }).merge(link);\n\n      if (this.data.canvas.graph.type === 'directed') {\n        // this means we need arrows, so we append the marker\n        parent.append('defs').selectAll('marker').data(['arrow']).enter().append('marker').attr('class', 'francy-arrows').attr('id', function (d) {\n          return d;\n        }).attr('viewBox', '0 -5 10 10').attr('refX', 25).attr('refY', 0).attr('markerWidth', 10).attr('markerHeight', 10).attr('orient', 'auto').append('path').attr('d', 'M0,-5L10,0L0,5 L10,0 L0, -5');\n        // update the style of the link\n        link.style('marker-end', 'url(#arrow)');\n      }\n\n      var nodeEnter = node.enter().append('g').attr('class', 'francy-node').attr('transform', function (d) {\n        return 'translate(' + d.x + ',' + d.y + ')';\n      });\n\n      nodeEnter.append('path').attr('d', d3.symbol().type(function (d) {\n        return _graph2.default.getSymbol(d.type);\n      }).size(function (d) {\n        return d.size * 100;\n      })).style('fill', function (d) {\n        return _graph2.default.colors(d.layer * 5);\n      }).attr('class', function (d) {\n        return 'francy-node' + (d.highlight ? ' francy-highlight' : '') + (Object.values(d.menus).length ? ' francy-context' : '');\n      }).attr('id', function (d) {\n        return d.id;\n      });\n\n      nodeEnter.append('text').attr('class', 'francy-label').attr('x', function (d) {\n        return -(d.title.length * 2.5);\n      }).text(function (d) {\n        return d.title;\n      });\n\n      var nodeUpdate = nodeEnter.merge(node);\n\n      nodeUpdate.transition().duration(750).attr('transform', function (d) {\n        return 'translate(' + d.y + ',' + d.x + ')';\n      });\n\n      nodeUpdate.select('.francy-node').attr('cursor', 'pointer');\n\n      var nodeExit = node.exit().transition().duration(750).attr('transform', function () {\n        return 'translate(0,0)';\n      }).remove();\n\n      nodeExit.select('path').style('fill-opacity', 1e-6);\n      nodeExit.select('text').style('fill-opacity', 1e-6);\n\n      node = nodeGroup.selectAll('g.francy-node');\n\n      if (this.data.canvas.graph.drag) {\n        node.call(d3.drag().on('start', dragstarted).on('drag', dragged).on('end', dragended));\n      }\n\n      _graph2.default.applyEvents(node, this.options);\n\n      var nodeOnClick = node.on('click');\n      node.on('click', function (d) {\n        // default, highlight connected nodes\n        connectedNodes.call(this);\n        // any callbacks will be handled here\n        nodeOnClick.call(this, d);\n      });\n\n      if (simulationActive) {\n        // Canvas Forces\n        var centerForce = d3.forceCenter().x(width / 2).y(height / 2);\n        var manyForce = d3.forceManyBody().strength(-canvasNodes.length * 30);\n        var linkForce = d3.forceLink(canvasLinks).id(function (d) {\n          return d.id;\n        }).distance(50);\n        var collideForce = d3.forceCollide(function (d) {\n          return d.size * 2;\n        });\n\n        //Generic gravity for the X position\n        var forceX = d3.forceX(width / 2).strength(0.05);\n\n        //Generic gravity for the Y position - undirected/directed graphs fall here\n        var forceY = d3.forceY(height / 2).strength(0.25);\n\n        if (this.data.canvas.graph.type === 'hasse') {\n          //Generic gravity for the X position\n          forceX = d3.forceX(width / 2).strength(0.5);\n          //Strong y positioning based on layer to simulate the hasse diagram\n          forceY = d3.forceY(function (d) {\n            return d.layer * 50;\n          }).strength(5);\n        }\n\n        var simulation = d3.forceSimulation(canvasNodes).force(\"charge\", manyForce).force(\"link\", linkForce).force(\"center\", centerForce).force(\"x\", forceX).force(\"y\", forceY).force(\"collide\", collideForce).on('tick', ticked).on(\"end\", function () {\n          // zoom to fit when simulation is over\n          parent.zoomToFit();\n        });\n\n        //force simulation restart\n        simulation.restart();\n      } else {\n        // well, simulation is off, zoom to fit now\n        parent.zoomToFit();\n      }\n\n      function ticked() {\n        link.attr('x1', function (d) {\n          return d.source.x;\n        }).attr('y1', function (d) {\n          return d.source.y;\n        }).attr('x2', function (d) {\n          return d.target.x;\n        }).attr('y2', function (d) {\n          return d.target.y;\n        });\n\n        node.attr('transform', function (d) {\n          return 'translate(' + d.x + ',' + d.y + ')';\n        });\n\n        node.each(collide(1));\n      }\n\n      // COLLISION\n      var padding = 10; // separation between circles;\n\n      function collide(alpha) {\n        var quadTree = d3.quadtree(canvasNodes);\n        return function (d) {\n          var rb = 100 * d.size + padding,\n              nx1 = d.x - rb,\n              nx2 = d.x + rb,\n              ny1 = d.y - rb,\n              ny2 = d.y + rb;\n          quadTree.visit(function (quad, x1, y1, x2, y2) {\n            if (quad.point && quad.point !== d) {\n              var x = d.x - quad.point.x,\n                  y = d.y - quad.point.y,\n                  l = Math.sqrt(x * x + y * y);\n              if (l < rb) {\n                l = (l - rb) / l * alpha;\n                d.x -= x *= l;\n                d.y -= y *= l;\n                quad.point.x += x;\n                quad.point.y += y;\n              }\n            }\n            return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;\n          });\n        };\n      }\n\n      // HIGHLIGHT\n      //Toggle stores whether the highlighting is on\n      var toggle = 0;\n      //Create an array logging what is connected to what\n      var linkedByIndex = {};\n\n      for (var i = 0; i < canvasNodes.length; i++) {\n        linkedByIndex[i + ',' + i] = 1;\n      }\n\n      canvasLinks.forEach(function (d) {\n        linkedByIndex[d.source.index + ',' + d.target.index] = 1;\n      });\n\n      function connectedNodes() {\n        //This function looks up whether a pair are neighbours\n        function neighboring(a, b) {\n          return linkedByIndex[a.index + ',' + b.index];\n        }\n        d3.event.preventDefault();\n        if (toggle === 0) {\n          //Reduce the opacity of all but the neighbouring nodes\n          var d = d3.select(this).node().__data__;\n          node.style('opacity', function (o) {\n            return neighboring(d, o) || neighboring(o, d) ? 1 : 0.1;\n          });\n          link.style('opacity', function (o) {\n            return d.index === o.source.index || d.index === o.target.index ? 1 : 0.1;\n          });\n          //Reduce the op\n          toggle = 1;\n        } else {\n          //Put them back to opacity=1\n          node.style('opacity', 1);\n          link.style('opacity', 1);\n          toggle = 0;\n        }\n      }\n\n      function dragstarted(d) {\n        if (!d3.event.active && simulationActive) {\n          simulation.alphaTarget(0.01).restart();\n        }\n        d.fx = d.x;\n        d.fy = d.y;\n      }\n\n      function dragged(d) {\n        d.fx = d3.event.x;\n        d.fy = d3.event.y;\n      }\n\n      function dragended(d) {\n        if (!d3.event.active && simulationActive) {\n          simulation.alphaTarget(0);\n        }\n        d.fx = null;\n        d.fy = null;\n      }\n\n      (0, _component.RegisterMathJax)(this.SVGParent);\n\n      return this;\n    }\n  }, {\n    key: 'unrender',\n    value: function unrender() {}\n  }]);\n\n  return GenericGraph;\n}(_renderer2.default);\n\nexports.default = GenericGraph;\n\n},{\"../util/component\":23,\"./graph\":14,\"./renderer\":21}],13:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _renderer = require('./renderer');\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _graph = require('./graph');\n\nvar _graph2 = _interopRequireDefault(_graph);\n\nvar _component = require('../util/component');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/* global d3 */\n\nvar TreeGraph = function (_Renderer) {\n  _inherits(TreeGraph, _Renderer);\n\n  function TreeGraph(_ref) {\n    var _ref$verbose = _ref.verbose,\n        verbose = _ref$verbose === undefined ? false : _ref$verbose,\n        appendTo = _ref.appendTo,\n        callbackHandler = _ref.callbackHandler;\n\n    _classCallCheck(this, TreeGraph);\n\n    return _possibleConstructorReturn(this, (TreeGraph.__proto__ || Object.getPrototypeOf(TreeGraph)).call(this, { verbose: verbose, appendTo: appendTo, callbackHandler: callbackHandler }));\n  }\n\n  _createClass(TreeGraph, [{\n    key: 'render',\n    value: function render() {\n\n      var parent = this.options.appendTo.element;\n\n      this.element = parent.select('g.francy-content');\n\n      var width = +parent.attr('width') || d3.select('body').node().getBoundingClientRect().width,\n          height = +parent.attr('height') || d3.select('body').node().getBoundingClientRect().height;\n\n      var i = 0,\n          duration = 750,\n          root;\n\n      var treemap = d3.tree().size([height, width]);\n\n      root = d3.hierarchy(this.treeData, function (d) {\n        return d.children;\n      });\n      root.x0 = height / 2;\n      root.y0 = 0;\n\n      root.children.forEach(collapse);\n\n      update.call(this, root);\n\n      // Collapse the node and all it's children\n      function collapse(d) {\n        if (d.children) {\n          d._children = d.children;\n          d._children.forEach(collapse);\n          d.children = null;\n        }\n      }\n\n      function update(source) {\n        var _this2 = this;\n\n        // Assigns the x and y position for the nodes\n        var treeData = treemap(root);\n\n        // Compute the new tree layout.\n        var nodes = treeData.descendants(),\n            links = treeData.descendants().slice(1);\n\n        // Normalize for fixed-depth.\n        nodes.forEach(function (d) {\n          return d.y = d.depth * 150;\n        });\n\n        // ****************** links section ***************************\n\n        var linkGroup = this.element.selectAll('g.francy-links');\n\n        if (!linkGroup.node()) {\n          linkGroup = this.element.append('g').attr('class', 'francy-links');\n        }\n\n        // Update the links...\n        var link = linkGroup.selectAll('path.francy-edge').data(links, function (d) {\n          return d.id || (d.id = ++i);\n        });\n\n        // Enter any new links at the parent's previous position.\n        var linkEnter = link.enter().append('g').attr('class', 'francy-link').append('path').attr('class', 'francy-edge').attr('d', function () {\n          var o = { x: source.x0, y: source.y0 };\n          return diagonal(o, o);\n        });\n\n        // UPDATE\n        var linkUpdate = linkEnter.merge(link);\n\n        // Transition back to the parent element position\n        linkUpdate.transition().duration(duration).attr('d', function (d) {\n          return diagonal(d, d.parent);\n        });\n\n        // Remove any exiting links\n        link.exit().transition().duration(duration).attr('d', function () {\n          var o = { x: source.x, y: source.y };\n          return diagonal(o, o);\n        }).each(function () {\n          d3.select(this.parentNode).remove();\n        });\n\n        linkGroup.selectAll('.francy-edge').style('fill', 'none').style('stroke', '#ccc').style('stroke-width', '1px');\n\n        // Store the old positions for transition.\n        nodes.forEach(function (d) {\n          d.x0 = d.x;\n          d.y0 = d.y;\n        });\n\n        // Creates a curved (diagonal) path from parent to the child nodes\n        function diagonal(s, d) {\n          return 'M ' + s.y + ' ' + s.x + '\\n            C ' + (s.y + d.y) / 2 + ' ' + s.x + ',\\n              ' + (s.y + d.y) / 2 + ' ' + d.x + ',\\n              ' + d.y + ' ' + d.x;\n        }\n\n        // ****************** Nodes section ***************************\n\n        var nodeGroup = this.element.selectAll('g.francy-nodes');\n\n        if (!nodeGroup.node()) {\n          nodeGroup = this.element.append('g').attr('class', 'francy-nodes');\n        }\n\n        var node = nodeGroup.selectAll('g.francy-node').data(nodes, function (d) {\n          return d.id || (d.id = ++i);\n        });\n\n        // Enter any new modes at the parent's previous position.\n        var nodeEnter = node.enter().append('g').attr('class', 'francy-node').attr('transform', function () {\n          return 'translate(' + source.y0 + ',' + source.x0 + ')';\n        });\n\n        // Add Circle for the nodes\n        nodeEnter.append('path').attr('d', d3.symbol().type(function (d) {\n          return _graph2.default.getSymbol(d.data.type);\n        }).size(function (d) {\n          return d.data.size * 100;\n        })).attr('class', 'francy-symbol');\n\n        // Add labels for the nodes\n        nodeEnter.append('text').attr('class', 'francy-label').attr('x', function (d) {\n          return -(d.data.title.length * 2.5);\n        }).text(function (d) {\n          return d.data.title;\n        });\n\n        // UPDATE\n        var nodeUpdate = nodeEnter.merge(node);\n\n        // Transition to the proper position for the node\n        nodeUpdate.transition().duration(duration).attr('transform', function (d) {\n          return 'translate(' + d.y + ',' + d.x + ')';\n        });\n\n        // Update the node attributes and style\n        nodeUpdate.select('.francy-node').attr('cursor', 'pointer');\n\n        // Remove any exiting nodes\n        node.exit().transition().duration(duration).attr('transform', function () {\n          return 'translate(' + source.y + ',' + source.x + ')';\n        }).remove();\n\n        //nodeExit.select('path').style('fill-opacity', 1e-6);\n        //nodeExit.select('text').style('fill-opacity', 1e-6);\n\n        nodeGroup.selectAll('.francy-symbol').style('fill', function (d) {\n          return d.children || d._children ? 'lightsteelblue' : _graph2.default.colors(d.data.layer * 5);\n        });\n\n        node = nodeGroup.selectAll('g.francy-node');\n        _graph2.default.applyEvents(node, this.options);\n\n        var nodeOnClick = node.on('click');\n        node.on('click', function (d) {\n          // any callbacks will be handled here\n          nodeOnClick.call(_this2, d.data);\n          // default, highlight connected nodes\n          click.call(_this2, d);\n        });\n\n        // Toggle children on click.\n        var self = this;\n\n        function click(d) {\n          if (d.children) {\n            d._children = d.children;\n            d.children = null;\n          } else {\n            d.children = d._children;\n            d._children = null;\n          }\n          update.call(self, d);\n        }\n\n        (0, _component.RegisterMathJax)(this.SVGParent);\n      }\n\n      return this;\n    }\n  }, {\n    key: 'unrender',\n    value: function unrender() {}\n\n    /**\n     * Transforms flat data into tree data by analysing the parents of each node\n     * @returns {Object} the data transformed in tree data\n     */\n\n  }, {\n    key: 'treeData',\n    get: function get() {\n      var canvasNodes = this.data.canvas.graph.nodes ? Object.values(this.data.canvas.graph.nodes) : [];\n      var dataMap = canvasNodes.reduce(function (map, node) {\n        map[node.id] = node;\n        return map;\n      }, {});\n      var treeData = [];\n      canvasNodes.forEach(function (node) {\n        var parent = dataMap[node.parent];\n        if (parent) {\n          (parent.children || (parent.children = [])).push(node);\n        } else {\n          treeData.push(node);\n        }\n      });\n      return treeData[0];\n    }\n  }]);\n\n  return TreeGraph;\n}(_renderer2.default);\n\nexports.default = TreeGraph;\n\n},{\"../util/component\":23,\"./graph\":14,\"./renderer\":21}],14:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _dec, _desc, _value, _class;\n\nvar _renderer = require('./renderer');\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _graphTree = require('./graph-tree');\n\nvar _graphTree2 = _interopRequireDefault(_graphTree);\n\nvar _graphGeneric = require('./graph-generic');\n\nvar _graphGeneric2 = _interopRequireDefault(_graphGeneric);\n\nvar _menuContext = require('./menu-context');\n\nvar _menuContext2 = _interopRequireDefault(_menuContext);\n\nvar _tooltip = require('./tooltip');\n\nvar _tooltip2 = _interopRequireDefault(_tooltip);\n\nvar _callback = require('./callback');\n\nvar _callback2 = _interopRequireDefault(_callback);\n\nvar _data = require('../decorator/data');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\n/* global d3 */\n\nvar Graph = (_dec = (0, _data.dataRequired)('canvas.graph'), (_class = function (_Renderer) {\n  _inherits(Graph, _Renderer);\n\n  function Graph(_ref) {\n    var _ref$verbose = _ref.verbose,\n        verbose = _ref$verbose === undefined ? false : _ref$verbose,\n        appendTo = _ref.appendTo,\n        callbackHandler = _ref.callbackHandler;\n\n    _classCallCheck(this, Graph);\n\n    return _possibleConstructorReturn(this, (Graph.__proto__ || Object.getPrototypeOf(Graph)).call(this, { verbose: verbose, appendTo: appendTo, callbackHandler: callbackHandler }));\n  }\n\n  _createClass(Graph, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var element = undefined;\n      switch (this.data.canvas.graph.type) {\n        case \"tree\":\n          element = new _graphTree2.default(this.options).load(this.data).render();\n          break;\n        default:\n          element = new _graphGeneric2.default(this.options).load(this.data).render();\n      }\n\n      setTimeout(function () {\n        _this2.options.appendTo.element.zoomToFit();\n      }, 10);\n\n      return element;\n    }\n  }, {\n    key: 'unrender',\n    value: function unrender() {}\n  }], [{\n    key: 'applyEvents',\n    value: function applyEvents(element, options) {\n      if (!element) return;\n\n      var tooltip = new _tooltip2.default(options);\n      var contextMenu = new _menuContext2.default(options);\n      var callback = new _callback2.default(options);\n\n      element.on('contextmenu', function (d) {\n        d = d.data || d;\n        // default, build context menu\n        contextMenu.load(d, true).render();\n        // any callbacks will be handled here\n        executeCallback.call(this, d, 'contextmenu');\n      }).on('click', function (d) {\n        d = d.data || d;\n        // any callbacks will be handled here\n        executeCallback.call(this, d, 'click');\n      }).on('dblclick', function (d) {\n        d = d.data || d;\n        // any callbacks will be handled here\n        executeCallback.call(this, d, 'dblclick');\n      }).on(\"mouseenter\", function (d) {\n        d = d.data || d;\n        // default, show tooltip\n        tooltip.load(d.messages, true).render();\n      }).on(\"mouseout\", function () {\n        // default, hide tooltip\n        tooltip.unrender();\n      });\n\n      function executeCallback(data, event) {\n        if (data.callbacks) {\n          Object.values(data.callbacks).forEach(function (cb) {\n            // execute the ones that match the event!\n            cb.trigger === event && callback.load({ callback: cb }, true).execute();\n          });\n        }\n      }\n    }\n  }, {\n    key: 'getSymbol',\n    value: function getSymbol(type) {\n      if (type === 'circle') {\n        return d3.symbolCircle;\n      } else if (type === 'cross') {\n        return d3.symbolCross;\n      } else if (type === 'diamond') {\n        return d3.symbolDiamond;\n      } else if (type === 'square') {\n        return d3.symbolSquare;\n      } else if (type === 'triangle') {\n        return d3.symbolTriangle;\n      } else if (type === 'star') {\n        return d3.symbolStar;\n      } else if (type === 'wye') {\n        return d3.symbolWye;\n      } else {\n        return d3.symbolCircle;\n      }\n    }\n  }, {\n    key: 'colors',\n    get: function get() {\n      return d3.scaleSequential().domain([0, 100]).interpolator(d3.interpolateRainbow);\n    }\n  }]);\n\n  return Graph;\n}(_renderer2.default), (_applyDecoratedDescriptor(_class.prototype, 'render', [_dec], Object.getOwnPropertyDescriptor(_class.prototype, 'render'), _class.prototype)), _class));\nexports.default = Graph;\n\n},{\"../decorator/data\":1,\"./callback\":4,\"./graph-generic\":12,\"./graph-tree\":13,\"./menu-context\":15,\"./renderer\":21,\"./tooltip\":22}],15:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _dec, _desc, _value, _class;\n\nvar _menu = require('./menu');\n\nvar _menu2 = _interopRequireDefault(_menu);\n\nvar _data = require('../decorator/data');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\n/* global d3 */\n\nvar ContextMenu = (_dec = (0, _data.dataRequired)('menus'), (_class = function (_Menu) {\n  _inherits(ContextMenu, _Menu);\n\n  function ContextMenu(_ref) {\n    var _ref$verbose = _ref.verbose,\n        verbose = _ref$verbose === undefined ? false : _ref$verbose,\n        appendTo = _ref.appendTo,\n        callbackHandler = _ref.callbackHandler;\n\n    _classCallCheck(this, ContextMenu);\n\n    return _possibleConstructorReturn(this, (ContextMenu.__proto__ || Object.getPrototypeOf(ContextMenu)).call(this, { verbose: verbose, appendTo: appendTo, callbackHandler: callbackHandler }));\n  }\n\n  _createClass(ContextMenu, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      d3.event.preventDefault();\n\n      this.element = this.HTMLParent.select('div.francy-context-menu-holder');\n      // check if the window is already present\n      if (!this.element.node()) {\n        this.element = this.HTMLParent.append('div').attr('class', 'francy-context-menu-holder');\n      }\n\n      var pos = d3.mouse(this.SVGParent.node());\n\n      this.element.style('left', pos[0] + 5 + 'px').style('top', pos[1] + 5 + 'px');\n\n      // show the context menu\n      this.element.style('display', 'block');\n\n      // check if it exists already\n      if (this.element.selectAll('*').node()) {\n        return;\n      }\n\n      // destroy menu\n      d3.select('body').on('click.francy-context-menu', function () {\n        return _this2.unrender();\n      });\n\n      // this gets executed when a contextmenu event occurs\n      var menu = this.element.append('div').attr('class', 'francy-context-menu').append('ul');\n      var menusIterator = this.iterator(Object.values(this.data.menus));\n      this.traverse(menu, menusIterator);\n\n      return this;\n    }\n  }, {\n    key: 'unrender',\n    value: function unrender() {\n      if (this.element) {\n        this.element.selectAll('*').remove();\n        this.element.style('display', null);\n      }\n    }\n  }]);\n\n  return ContextMenu;\n}(_menu2.default), (_applyDecoratedDescriptor(_class.prototype, 'render', [_dec], Object.getOwnPropertyDescriptor(_class.prototype, 'render'), _class.prototype)), _class));\nexports.default = ContextMenu;\n\n},{\"../decorator/data\":1,\"./menu\":17}],16:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _menu = require('./menu');\n\nvar _menu2 = _interopRequireDefault(_menu);\n\nvar _modalAbout = require('./modal-about');\n\nvar _modalAbout2 = _interopRequireDefault(_modalAbout);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n//import * as SvgToPng from '../../node_modules/save-svg-as-png/saveSvgAsPng';\n\n/* global d3 window */\n\nvar MainMenu = function (_Menu) {\n  _inherits(MainMenu, _Menu);\n\n  function MainMenu(_ref) {\n    var _ref$verbose = _ref.verbose,\n        verbose = _ref$verbose === undefined ? false : _ref$verbose,\n        appendTo = _ref.appendTo,\n        callbackHandler = _ref.callbackHandler;\n\n    _classCallCheck(this, MainMenu);\n\n    return _possibleConstructorReturn(this, (MainMenu.__proto__ || Object.getPrototypeOf(MainMenu)).call(this, { verbose: verbose, appendTo: appendTo, callbackHandler: callbackHandler }));\n  }\n\n  _createClass(MainMenu, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var parent = this.options.appendTo.element;\n\n      var aboutModal = new _modalAbout2.default(this.options);\n\n      // Otherwise clashes with the canvas itself!\n      var menuId = 'MainMenu-' + this.data.canvas.id;\n      this.element = d3.select('#' + menuId);\n\n      // Check if the menu is already present\n      if (!this.element.node()) {\n        // create a div element detached from the DOM!\n        this.logger.debug('Creating Main Menu [' + menuId + ']...');\n        this.element = parent.append('div').attr('class', 'francy-main-menu-holder').attr('id', menuId);\n      }\n\n      // Force rebuild menu again\n      this.element.selectAll('*').remove();\n\n      this.element = this.element.append('ul').attr('class', 'francy-main-menu');\n\n      if (this.data.canvas.title) {\n        this.element.append('li').attr('class', 'francy-title').append('a').html(this.data.canvas.title);\n      }\n\n      var entry = this.element.append('li');\n      entry.append('a').html('Francy');\n      var content = entry.append('ul');\n      if (this.data.canvas.zoomToFit) {\n        content.append('li').append('a').on('click', function () {\n          return _this2.options.appendTo.canvas.zoomToFit();\n        }).attr('title', 'Zoom to Fit').html('Zoom to Fit');\n      }\n      //content.append('li').append('a').on('click', () => SvgToPng.saveSvgAsPng(document.getElementById(this.data.canvas.id), \"diagram.png\")).attr('title', 'Save to PNG').html('Save to PNG');\n      content.append('li').append('a').on('click', function () {\n        return aboutModal.load(_this2.data).render();\n      }).attr('title', 'About').html('About');\n\n      // Traverse all menus and flatten them!\n      var menusIterator = this.iterator(Object.values(this.data.canvas.menus));\n      this.traverse(this.element, menusIterator);\n\n      this.logger.debug('Main Menu updated [' + menuId + ']...');\n\n      return this;\n    }\n  }, {\n    key: 'unrender',\n    value: function unrender() {}\n  }]);\n\n  return MainMenu;\n}(_menu2.default);\n\nexports.default = MainMenu;\n\n},{\"./menu\":17,\"./modal-about\":19}],17:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _renderer = require('./renderer');\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _callback = require('./callback');\n\nvar _callback2 = _interopRequireDefault(_callback);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Menu = function (_Renderer) {\n  _inherits(Menu, _Renderer);\n\n  function Menu(_ref) {\n    var _ref$verbose = _ref.verbose,\n        verbose = _ref$verbose === undefined ? false : _ref$verbose,\n        appendTo = _ref.appendTo,\n        callbackHandler = _ref.callbackHandler;\n\n    _classCallCheck(this, Menu);\n\n    return _possibleConstructorReturn(this, (Menu.__proto__ || Object.getPrototypeOf(Menu)).call(this, { verbose: verbose, appendTo: appendTo, callbackHandler: callbackHandler }));\n  }\n\n  _createClass(Menu, [{\n    key: 'traverse',\n    value: function traverse(appendTo, menusIterator) {\n      var _this2 = this;\n\n      while (menusIterator.hasNext()) {\n        var menuItem = menusIterator.next();\n        var entry = appendTo.append('li');\n        var action = entry.selectAll('a').data([menuItem]).enter().append('a').attr('title', menuItem.title).html(menuItem.title);\n        if (menuItem.callback && Object.values(menuItem.callback).length) {\n          action.on('click', function (d) {\n            return new _callback2.default(_this2.options).load(d, true).execute();\n          });\n        }\n        if (menuItem.menus && Object.values(menuItem.menus).length > 0) {\n          var content = entry.append('ul');\n          var subMenusIterator = this.iterator(Object.values(menuItem.menus));\n          this.traverse(content, subMenusIterator);\n        }\n      }\n    }\n  }, {\n    key: 'iterator',\n    value: function iterator(array) {\n      var nextIndex = 0;\n      return {\n        next: function next() {\n          return this.hasNext() ? array[nextIndex++] : undefined;\n        },\n        hasNext: function hasNext() {\n          return nextIndex < array.length;\n        }\n      };\n    }\n  }, {\n    key: 'unrender',\n    value: function unrender() {}\n  }]);\n\n  return Menu;\n}(_renderer2.default);\n\nexports.default = Menu;\n\n},{\"./callback\":4,\"./renderer\":21}],18:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _dec, _desc, _value, _class;\n\nvar _renderer = require('./renderer');\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _data = require('../decorator/data');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\n/* global d3 */\n\nvar Message = (_dec = (0, _data.dataRequired)('canvas.messages'), (_class = function (_Renderer) {\n  _inherits(Message, _Renderer);\n\n  function Message(_ref) {\n    var _ref$verbose = _ref.verbose,\n        verbose = _ref$verbose === undefined ? false : _ref$verbose,\n        appendTo = _ref.appendTo,\n        callbackHandler = _ref.callbackHandler;\n\n    _classCallCheck(this, Message);\n\n    return _possibleConstructorReturn(this, (Message.__proto__ || Object.getPrototypeOf(Message)).call(this, { verbose: verbose, appendTo: appendTo, callbackHandler: callbackHandler }));\n  }\n\n  _createClass(Message, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var parent = this.options.appendTo.element;\n\n      var messages = Object.keys(this.data.canvas.messages).map(function (key) {\n        return {\n          id: key,\n          type: _this2.data.canvas.messages[key].type,\n          title: _this2.data.canvas.messages[key].title,\n          text: _this2.data.canvas.messages[key].text\n        };\n      });\n\n      var alertsId = 'Messages-' + this.data.canvas.id;\n      this.element = d3.select('#' + alertsId);\n      // check if the window is already present\n      if (!this.element.node()) {\n        this.element = parent.append('div').attr('class', 'francy-message-holder').attr('id', alertsId);\n      }\n\n      var self = this;\n      messages.map(function (d) {\n        // only render new ones\n        if (!self.element.select('div#' + d.id).node()) {\n          var row = self.element.append('div').attr('id', d.id).attr('class', 'francy-alert alert-' + d.type).on('click', function () {\n            d3.select(this).style('display', 'none');\n          });\n          row.append('span').attr('class', 'strong').text(d.title);\n          row.append('span').text(d.text);\n          row.append('span').attr('class', 'strong').style('display', 'none').text(\"x\");\n        }\n      });\n\n      this.element.style('display', 'block');\n\n      return this;\n    }\n  }, {\n    key: 'unrender',\n    value: function unrender() {}\n  }]);\n\n  return Message;\n}(_renderer2.default), (_applyDecoratedDescriptor(_class.prototype, 'render', [_dec], Object.getOwnPropertyDescriptor(_class.prototype, 'render'), _class.prototype)), _class));\nexports.default = Message;\n\n},{\"../decorator/data\":1,\"./renderer\":21}],19:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _renderer = require('./renderer');\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _component = require('../util/component');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/* global d3 */\n\nvar AboutModal = function (_Renderer) {\n  _inherits(AboutModal, _Renderer);\n\n  function AboutModal(_ref) {\n    var _ref$verbose = _ref.verbose,\n        verbose = _ref$verbose === undefined ? false : _ref$verbose,\n        appendTo = _ref.appendTo,\n        callbackHandler = _ref.callbackHandler;\n\n    _classCallCheck(this, AboutModal);\n\n    return _possibleConstructorReturn(this, (AboutModal.__proto__ || Object.getPrototypeOf(AboutModal)).call(this, { verbose: verbose, appendTo: appendTo, callbackHandler: callbackHandler }));\n  }\n\n  _createClass(AboutModal, [{\n    key: 'render',\n    value: function render() {\n      var self = this;\n\n      var modalId = 'AboutModalWindow';\n\n      this.logger.debug('Creating About Modal [' + modalId + ']...');\n\n      // we want to overlay everything, hence 'body' must be used\n      var overlay = d3.select('body').append('div').attr('class', 'francy-overlay');\n      var holder = d3.select('body').append('div').attr('class', 'francy');\n      this.element = holder.append('div').attr('id', modalId).attr('class', 'francy-modal');\n\n      var form = this.element.append('form');\n\n      var header = form.append('div').attr('class', 'francy-modal-header');\n\n      header.append('span').html('About Francy v' + (this.data.version || 'N/A'));\n\n      var content = form.append('div').attr('class', 'francy-modal-content').append('div').attr('class', 'francy-table').append('div').attr('class', 'francy-table-body');\n\n      content.append('span').text('Loaded Object:');\n      content.append('pre').attr('class', 'francy').html(this.syntaxHighlight(JSON.stringify(this.data.canvas, null, 2)));\n      content.append('span').append('a').attr('href', 'https://github.com/mcmartins/francy').text('Francy on Github');\n\n      var footer = form.append('div').attr('class', 'francy-modal-footer');\n\n      footer.append('button').text('Ok').on('click', function () {\n        overlay.remove();\n        self.element.remove();\n        holder.remove();\n        d3.event.preventDefault();\n        return false;\n      });\n\n      // disable keyboard shortcuts when using this modal in Jupyter\n      (0, _component.RegisterJupyterKeyboardEvents)(['.francy', '.francy-arg', '.francy-overlay', '.francy-modal']);\n\n      this.logger.debug('Callback About updated [' + modalId + ']...');\n\n      return this;\n    }\n  }, {\n    key: 'unrender',\n    value: function unrender() {}\n\n    // credits here: https://stackoverflow.com/questions/4810841/how-can-i-pretty-print-json-using-javascript#answer-7220510\n\n  }, {\n    key: 'syntaxHighlight',\n    value: function syntaxHighlight(json) {\n      json = json.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n      return json.replace(/(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)/g, function (match) {\n        var cls = 'number';\n        if (/^\"/.test(match)) {\n          if (/:$/.test(match)) {\n            cls = 'key';\n          } else {\n            cls = 'string';\n          }\n        } else if (/true|false/.test(match)) {\n          cls = 'boolean';\n        } else if (/null/.test(match)) {\n          cls = 'null';\n        }\n        return '<span class=\"' + cls + '\">' + match + '</span>';\n      });\n    }\n  }]);\n\n  return AboutModal;\n}(_renderer2.default);\n\nexports.default = AboutModal;\n\n},{\"../util/component\":23,\"./renderer\":21}],20:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _renderer = require('./renderer');\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _component = require('../util/component');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/* global d3 */\n\nvar RequiredArgsModal = function (_Renderer) {\n  _inherits(RequiredArgsModal, _Renderer);\n\n  function RequiredArgsModal(_ref) {\n    var _ref$verbose = _ref.verbose,\n        verbose = _ref$verbose === undefined ? false : _ref$verbose,\n        appendTo = _ref.appendTo,\n        callbackHandler = _ref.callbackHandler;\n\n    _classCallCheck(this, RequiredArgsModal);\n\n    return _possibleConstructorReturn(this, (RequiredArgsModal.__proto__ || Object.getPrototypeOf(RequiredArgsModal)).call(this, { verbose: verbose, appendTo: appendTo, callbackHandler: callbackHandler }));\n  }\n\n  _createClass(RequiredArgsModal, [{\n    key: 'render',\n    value: function render() {\n      var self = this;\n\n      var modalId = this.data.callback.id;\n\n      this.logger.debug('Creating Callback Modal [' + modalId + ']...');\n\n      // we want to overlay everything, hence 'body' must be used\n      var overlay = d3.select('body').append('div').attr('class', 'francy-overlay');\n      var holder = d3.select('body').append('div').attr('class', 'francy');\n      this.element = holder.append('div').attr('id', modalId).attr('class', 'francy-modal');\n\n      var form = this.element.append('form');\n\n      var header = form.append('div').attr('class', 'francy-modal-header');\n\n      var headerTitle = header.append('span').html('Required arguments&nbsp;');\n      if (this.data.title) {\n        headerTitle.append('span').attr('style', 'font-weight: bold;').text('for ' + this.data.title);\n      }\n\n      var content = form.append('div').attr('class', 'francy-modal-content').append('div').attr('class', 'francy-table').append('div').attr('class', 'francy-table-body');\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = Object.values(this.data.callback.requiredArgs)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var arg = _step.value;\n\n          var row = content.append('div').attr('class', 'francy-table-row');\n          row.append('div').attr('class', 'francy-table-cell').append('label').attr('for', arg.id).text(arg.title);\n          var input = row.append('div').attr('class', 'francy-table-cell').append('input').attr('id', arg.id).attr('class', 'francy-arg').attr('required', '').attr('name', arg.id).attr('type', arg.type).attr('value', arg.value).on('change', function () {\n            self.data.callback.requiredArgs[this.id].value = this.value;\n          }).on('input', this.onchange).on('keyup', this.onchange).on('paste', this.onchange);\n          // wait, if it is boolean we create a checkbox\n          if (arg.type === 'boolean') {\n            // well, a checkbox works this way so we need to initialize \n            // the value to false and update the value based on the checked \n            // property that triggers the onchange event\n            arg.value = arg.value || false;\n            input.attr('type', 'checkbox').attr('required', null).attr('value', arg.value).on('change', function () {\n              self.data.callback.requiredArgs[this.id].value = this.value = this.checked;\n            });\n          }\n          row.append('span').attr('class', 'validity');\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      var footer = form.append('div').attr('class', 'francy-modal-footer');\n\n      footer.append('button').text('Ok').on('click', function () {\n        if (form.node().checkValidity()) {\n          d3.event.preventDefault();\n          self.options.callbackHandler(self.data.callback);\n          overlay.remove();\n          self.element.remove();\n          holder.remove();\n        }\n        return false;\n      });\n      footer.append('button').text('Cancel').on('click', function () {\n        overlay.remove();\n        self.element.remove();\n        holder.remove();\n        d3.event.preventDefault();\n        return false;\n      });\n\n      // disable keyboard shortcuts when using this modal in Jupyter\n      (0, _component.RegisterJupyterKeyboardEvents)(['.francy', '.francy-arg', '.francy-overlay', '.francy-modal']);\n\n      content.selectAll('.francy-arg').node().focus();\n\n      this.logger.debug('Callback Modal updated [' + modalId + ']...');\n\n      return this;\n    }\n  }, {\n    key: 'unrender',\n    value: function unrender() {}\n  }]);\n\n  return RequiredArgsModal;\n}(_renderer2.default);\n\nexports.default = RequiredArgsModal;\n\n},{\"../util/component\":23,\"./renderer\":21}],21:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _base = require('./base');\n\nvar _base2 = _interopRequireDefault(_base);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/* global d3 */\n\nvar Renderer = function (_Base) {\n  _inherits(Renderer, _Base);\n\n  function Renderer(_ref) {\n    var _ref$verbose = _ref.verbose,\n        verbose = _ref$verbose === undefined ? false : _ref$verbose,\n        appendTo = _ref.appendTo,\n        callbackHandler = _ref.callbackHandler;\n\n    _classCallCheck(this, Renderer);\n\n    var _this = _possibleConstructorReturn(this, (Renderer.__proto__ || Object.getPrototypeOf(Renderer)).call(this, { verbose: verbose, appendTo: appendTo, callbackHandler: callbackHandler }));\n\n    if (new.target === Renderer) {\n      throw new TypeError('Cannot construct [Renderer] instances directly!');\n    }\n    if (_this.render === undefined || typeof _this.render !== 'function') {\n      throw new TypeError('Must override [render()] method!');\n    }\n    if (_this.unrender === undefined) {\n      _this.logger.debug('No [unrender()] method specified...');\n    }\n    _this.element = undefined;\n    return _this;\n  }\n\n  _createClass(Renderer, [{\n    key: 'HTMLParent',\n    get: function get() {\n      return this.options.appendTo.element.node().tagName.toUpperCase() === 'SVG' ? d3.select(this.options.appendTo.element.node().parentNode) : this.options.appendTo.element;\n    }\n  }, {\n    key: 'SVGParent',\n    get: function get() {\n      return this.options.appendTo.element.node().tagName.toUpperCase() === 'DIV' ? this.options.appendTo.element.select('svg') : this.options.appendTo.element;\n    }\n  }]);\n\n  return Renderer;\n}(_base2.default);\n\nexports.default = Renderer;\n\n},{\"./base\":3}],22:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _dec, _desc, _value, _class;\n\nvar _renderer = require('./renderer');\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _data = require('../decorator/data');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\n/* global d3 */\n\nvar Tooltip = (_dec = (0, _data.dataRequired)(), (_class = function (_Renderer) {\n  _inherits(Tooltip, _Renderer);\n\n  function Tooltip(_ref) {\n    var _ref$verbose = _ref.verbose,\n        verbose = _ref$verbose === undefined ? false : _ref$verbose,\n        appendTo = _ref.appendTo,\n        callbackHandler = _ref.callbackHandler;\n\n    _classCallCheck(this, Tooltip);\n\n    return _possibleConstructorReturn(this, (Tooltip.__proto__ || Object.getPrototypeOf(Tooltip)).call(this, { verbose: verbose, appendTo: appendTo, callbackHandler: callbackHandler }));\n  }\n\n  _createClass(Tooltip, [{\n    key: 'render',\n    value: function render() {\n\n      this.element = this.HTMLParent.select('div.francy-tooltip-holder');\n      // check if the window is already present\n      if (!this.element.node()) {\n        this.element = this.HTMLParent.append('div').attr('class', 'francy-tooltip-holder');\n      }\n\n      var pos = d3.mouse(this.SVGParent.node());\n\n      // TODO fix always visible tooltip, fine until someone complains about :P\n      this.element.style('left', pos[0] + 'px').style('top', pos[1] + 'px');\n\n      // check if it exists already\n      if (this.element.selectAll('*').node()) {\n        return;\n      }\n\n      var table = this.element.append('div').attr('class', 'francy-tooltip').append('div').attr('class', 'francy-table').append('div').attr('class', 'francy-table-body');\n      var self = this;\n      Object.keys(this.data).map(function (key) {\n        var row = table.append('div').attr('class', 'francy-table-row');\n        row.append('div').attr('class', 'francy-table-cell').text(self.data[key].title);\n        row.append('div').attr('class', 'francy-table-cell').text(self.data[key].text);\n      });\n\n      // show tooltip\n      this.element.style('display', 'block');\n\n      this;\n    }\n  }, {\n    key: 'unrender',\n    value: function unrender() {\n      if (this.element) {\n        this.element.selectAll('*').remove();\n        this.element.style('display', null);\n      }\n    }\n  }]);\n\n  return Tooltip;\n}(_renderer2.default), (_applyDecoratedDescriptor(_class.prototype, 'render', [_dec], Object.getOwnPropertyDescriptor(_class.prototype, 'render'), _class.prototype)), _class));\nexports.default = Tooltip;\n\n},{\"../decorator/data\":1,\"./renderer\":21}],23:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RegisterMathJax = RegisterMathJax;\nexports.RegisterJupyterKeyboardEvents = RegisterJupyterKeyboardEvents;\n\nvar _logger = require('../util/logger');\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* global Jupyter, MathJax, d3 */\n\nfunction RegisterMathJax(element) {\n  if (!element) return;\n  setTimeout(function () {\n    try {\n      MathJax.Hub.Config({\n        tex2jax: {\n          inlineMath: [['$', '$'], ['\\\\(', '\\\\)']],\n          processEscapes: true\n        }\n      });\n\n      MathJax.Hub.Register.StartupHook('End', function () {\n        setTimeout(function () {\n          element.selectAll('.francy-label').each(function () {\n            var self = d3.select(this),\n                mathJax = self.select('text>span>svg');\n            if (mathJax.node()) {\n              setTimeout(function () {\n                mathJax.attr('x', self.attr('x'));\n                mathJax.attr('y', -15);\n                d3.select(self.node().parentNode).append(function () {\n                  return mathJax.node();\n                });\n                self.selectAll('*').remove();\n              }, 10);\n            }\n          });\n        }, 250);\n      });\n\n      MathJax.Hub.Queue(['Typeset', MathJax.Hub, element.node()]);\n    } catch (e) {\n      if (e.name == 'ReferenceError') {\n        new _logger2.default().info('It seems MathJax is not loaded...', e);\n      }\n    }\n  }, 10);\n}\n\nfunction RegisterJupyterKeyboardEvents(classes) {\n  // disable keyboard shortcuts in Jupyter for classes\n  if (!classes) return;\n  try {\n    classes.map(function (cl) {\n      Jupyter.keyboard_manager.register_events(cl);\n    });\n  } catch (e) {\n    if (e.name == 'ReferenceError') {\n      new _logger2.default().info('It seems we\\'re not running on Jupyter...', e);\n    }\n  }\n}\n\n},{\"../util/logger\":25}],24:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * This class contains methods to deal with JSON.\n */\nvar JsonUtils = function () {\n  function JsonUtils() {\n    _classCallCheck(this, JsonUtils);\n  }\n\n  _createClass(JsonUtils, null, [{\n    key: 'parse',\n\n\n    /**\n     * Parses an input nd checks whether this input is valid and returns a JSON object.\n     * @param input - the input to parse\n     * @returns {json} - if the input is a valid JSON object, otherwise returns {undefined}\n     */\n    value: function parse(input, partial) {\n      if (!input) {\n        return;\n      }\n      input = typeof input !== \"string\" ? JSON.stringify(input) : input;\n      input = input.replace(/[\\n\\r\\b\\\\]+|(gap>)/g, '');\n      var jsonRegex = /{(?:[^])*}/g;\n      var match = jsonRegex.exec(input);\n      if (match) {\n        input = match[0];\n        try {\n          var json = JSON.parse(input);\n          return json.mime === JsonUtils.MIME || partial ? json : undefined;\n        } catch (e) {\n          /* eslint-disable no-console */\n          console.error(e);\n          /* eslint-enable no-console */\n        }\n      }\n      return;\n    }\n  }, {\n    key: 'MIME',\n    get: function get() {\n      return 'application/vnd.francy+json';\n    }\n  }]);\n\n  return JsonUtils;\n}();\n\nexports.default = JsonUtils;\n\n},{}],25:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * This class is a singleton that provides a logger for the Francy application.\n */\nvar Logger = function () {\n\n  /**\n   * Singleton: Creates an instance of the logger and will returned that instance,\n   * everytime a new instance is requested.\n   * @param verbose prints extra log information to console.log, default false\n   */\n  function Logger() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$verbose = _ref.verbose,\n        verbose = _ref$verbose === undefined ? false : _ref$verbose;\n\n    _classCallCheck(this, Logger);\n\n    this.verbose = verbose;\n    this.console = console;\n  }\n\n  /**\n   * Creates a [DEBUG] entry in the console log\n   * @param message the message to print\n   */\n\n\n  _createClass(Logger, [{\n    key: 'debug',\n    value: function debug(message) {\n      if (this.verbose) {\n        this.console.debug(this._format('DEBUG', message));\n      }\n    }\n\n    /**\n     * Creates a [INFO] entry in the console log\n     * @param message the message to print\n     */\n\n  }, {\n    key: 'info',\n    value: function info(message) {\n      this.console.info(this._format('INFO', message));\n    }\n\n    /**\n     * Creates a [ERROR] entry in the console log\n     * @param message the message to print\n     * @param error the error Object to attach to the message\n     */\n\n  }, {\n    key: 'error',\n    value: function error(message, _error) {\n      this.console.error(this._format('ERROR', message), _error);\n    }\n\n    /**\n     * Creates a [WARN] entry in the console log\n     * @param message the message to print\n     * @param error the error Object to attach to the message\n     */\n\n  }, {\n    key: 'warn',\n    value: function warn(message, error) {\n      error = error || {};\n      this.console.error(this._format('WARN', message), error);\n    }\n\n    /**\n     * This is a private method that formats all log messages\n     * @param message the message to print\n     */\n\n  }, {\n    key: '_format',\n    value: function _format(level, message) {\n      return '[' + level + '] - ' + new Date().toISOString() + ' - ' + message;\n    }\n  }]);\n\n  return Logger;\n}();\n\nexports.default = Logger;\n\n},{}]},{},[2])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n"],"file":"../francy.bundle.js"}